{"version":3,"sources":["App.js","index.js"],"names":["App","state","date","Date","isClockVisible","clockName","getInterval","setInterval","setState","console","log","toLocaleTimeString","this","interval","call","prevProps","prevState","clearTimeout","className","type","onClick","Math","floor","random","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uMAyGeA,G,kNApGbC,MAAQ,CACNC,KAAM,IAAIC,KACVC,gBAAgB,EAChBC,UAAW,KACXC,YAJM,WAIS,IAAD,OACZ,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1BM,QAAQC,IAAI,EAAKT,MAAMC,KAAKS,wBAC3B,O,uDAIP,WACEC,KAAKC,SAAWD,KAAKX,MAAMK,YAAYQ,KAAKF,Q,gCAG9C,SAAmBG,EAAWC,GAC5B,IAAQZ,EAA8BY,EAA9BZ,eAAgBC,EAAcW,EAAdX,UAEnBO,KAAKX,MAAMG,gBACda,aAAaL,KAAKC,UAGhBD,KAAKX,MAAMG,iBAAmBA,IAChCQ,KAAKC,SAAWD,KAAKX,MAAMK,YAAYQ,KAAKF,OAG1CA,KAAKX,MAAMI,YAAcA,GAE3BI,QAAQC,IAAR,qCACgCL,EADhC,eACgDO,KAAKX,MAAMI,c,oBAK/D,WAAU,IAAD,OACP,EAIIO,KAAKX,MAHPC,EADF,EACEA,KACAE,EAFF,EAEEA,eACAC,EAHF,EAGEA,UAkBF,OACE,yBAAKa,UAAU,OACb,0CAEG,IACAb,GAGH,2CAEG,IACAD,GAAkBF,EAAKS,sBAG1B,4BACEO,UAAU,SACVC,KAAK,SACLC,QAhCY,WAChB,EAAKZ,SAAS,CACZJ,gBAAgB,EAChBF,KAAM,IAAIC,SA0BV,cAQA,4BACEe,UAAU,qBACVC,KAAK,SACLC,QAjCY,WAChB,EAAKZ,SAAS,CAAEJ,gBAAgB,MA6B9B,cAQA,4BACEc,UAAU,oBACVC,KAAK,SACLC,QArCgB,WACpB,EAAKZ,SAAS,CAAEH,UAAWgB,KAAKC,MAAsB,IAAhBD,KAAKE,cAiCzC,wB,GAzFUC,IAAMC,YCAxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.7d076d41.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    date: new Date(),\n    isClockVisible: true,\n    clockName: null,\n    getInterval() {\n      return setInterval(() => {\n        this.setState({ date: new Date() });\n        // eslint-disable-next-line\n        console.log(this.state.date.toLocaleTimeString());\n      }, 1000);\n    },\n  };\n\n  componentDidMount() {\n    this.interval = this.state.getInterval.call(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { isClockVisible, clockName } = prevState;\n\n    if (!this.state.isClockVisible) {\n      clearTimeout(this.interval);\n    }\n\n    if (this.state.isClockVisible && !isClockVisible) {\n      this.interval = this.state.getInterval.call(this);\n    }\n\n    if (this.state.clockName !== clockName) {\n      // eslint-disable-next-line\n      console.log(\n        `The Clock was renamed from ${clockName} to ${this.state.clockName}`,\n      );\n    }\n  }\n\n  render() {\n    const {\n      date,\n      isClockVisible,\n      clockName,\n    } = this.state;\n\n    const showClock = () => {\n      this.setState({\n        isClockVisible: true,\n        date: new Date(),\n      });\n    };\n\n    const hideClock = () => {\n      this.setState({ isClockVisible: false });\n    };\n\n    const setRandomName = () => {\n      this.setState({ clockName: Math.floor(Math.random() * 100) });\n    };\n\n    return (\n      <div className=\"App\">\n        <h1>\n          React clock\n          {' '}\n          {clockName}\n        </h1>\n\n        <p>\n          Current time:\n          {' '}\n          {isClockVisible && date.toLocaleTimeString()}\n        </p>\n\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={showClock}\n        >\n          Show Clock\n        </button>\n\n        <button\n          className=\"button button_hide\"\n          type=\"button\"\n          onClick={hideClock}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          className=\"button button_set\"\n          type=\"button\"\n          onClick={setRandomName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}